using System;
using System.Collections;
using System.Collections.Generic;
namespace coder
{
    class Program
    {
        static void Main(string[] args)
        {
            Hashtable animal = new Hashtable()
            {
                {0,"cow" },
                {1,"fox" },
                { 2,"lion"}
            };
            animal.Add(3, "pig");

            foreach (DictionaryEntry kvp in animal)
            {
                Console.WriteLine("key : {0} value : {1}", kvp.Key, kvp.Value);
            }
            Console.WriteLine("================using var keyword=====================");
            var animal1 = new Hashtable()
            {               
                {0,"cow" },
                {1,"fox" },
                { 2,"lion"}
            };
            animal1.Add(3, "pig");

            foreach (DictionaryEntry kvp in animal1)
            {
                Console.WriteLine("key : {0} value : {1}", kvp.Key, kvp.Value);
            }


            Console.WriteLine("===============Here update hashtable====");
           Hashtable animal2 = new Hashtable()
            {
                {0,"cow" },
                {1,"fox" },
                { 2,"lion"}
            };
            animal2.Add(3, "pig");


            animal2[3] = "elephent, mohan, sohan";

            foreach (DictionaryEntry kvp in animal2)
            {
                Console.WriteLine("key : {0} value : {1}", kvp.Key, kvp.Value);
            }


            Console.WriteLine("===============Here Remove Element from hashtable====");
            Hashtable animal3 = new Hashtable()
            {
                {0,"cow" },
                {1,"fox" },
                { 2,"lion"}
            };
            animal3.Add(3, "pig");


            animal3[3] = "elephent, mohan, sohan";

            animal3.Remove(2);

            foreach (DictionaryEntry kvp in animal3)
            {
                Console.WriteLine("key : {0} value : {1}", kvp.Key, kvp.Value);
            }
        }
    }
}
